class DeserializationExploit:
    name = "DeserializationExploit"
    description = "Demo Deserialization attack payloads for Java/PHP."

    @staticmethod
    def is_installed():
        return True

    def __init__(self, url, param):
        self.url = url
        self.param = param

    async def exploit(self, custom_payloads=None):
        payloads = custom_payloads or [
            "O:8:\"stdClass\":1:{s:4:\"test\";s:6:\"pwned!\";}",  # PHP
            "rO0ABXNyABFqYXZhLnV0aWwuQXJyYXlMaXN0x9qQnKpLzgMAAUsAAHhwdwQAAAACdAABYXQAAmJ4"  # Java
        ]
        results = []
        for payload in payloads:
            demo_url = f"{self.url}?{self.param}={payload}"
            results.append(f"Deserialization Demo: {demo_url}")
        summary = "Demo Deserialization payloads sent."
        detailed = "\n".join(results)
        return {"summary": summary, "detailed": detailed}
